package coding2.leetcode;

/**
 * @Author: alenlyx
 * @Date: 2019/9/9 19:02
 * @Version 1.0
 */
public class Leetcode485 {

    /**
     * 给定一个二进制数组， 计算其中最大连续1的个数。
     *
     * 示例 1:
     *
     * 输入: [1,1,0,1,1,1]
     * 输出: 3
     * 解释: 开头的两位和最后的三位都是连续1，所以最大连续1的个数是 3.
     * 注意：
     *
     * 输入的数组只包含?0 和1。
     * 输入数组的长度是正整数，且不超过 10,000。
     *
     * 来源：力扣（LeetCode）
     * 链接：https://leetcode-cn.com/problems/max-consecutive-ones
     * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
     */

    public int findMaxConsecutiveOnes(int [] nums){
        int result = 0,num = 0;
        for (int i = 0; i <nums.length ; i++) {
            if(nums[i] == 1){
                num++;
            }else {
                result = num>result ? num:result;
                num = 0;
            }
        }

        return result>num?result:num;
    }

    public static void main(String[] args) {
        int [] nums = {1,1,0,1,1,1};

        System.out.println(new Leetcode485().findMaxConsecutiveOnes(nums));
    }

}
